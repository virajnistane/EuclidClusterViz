#!/bin/bash
# setup_config.sh - Helper script to set up user configuration

echo "🔧 Cluster Visualization Configuration Setup"
echo "============================================="
echo

# Check if config_local.ini already exists
if [ -f "config_local.ini" ]; then
    echo "⚠️  config_local.ini already exists!"
    echo "   Current configuration will be preserved."
    echo "   To reconfigure, delete config_local.ini and run this script again."
    echo
    echo "   To view current config: python config.py"
    exit 0
fi

echo "This script will help you create a personalized configuration file."
echo "The configuration file specifies where your Euclid data is located."
echo

# Detect common paths
COMMON_WORKSPACES=(
    "/sps/euclid/OU-LE3/CL/ial_workspace/workdir"
    "/home/$USER/euclid_data"
    "/data/euclid"
    "$HOME/workspace/euclid_data"
)

COMMON_EDEN_PATHS=(
    "/cvmfs/euclid-dev.in2p3.fr/EDEN-3.1"
    "/opt/euclid/EDEN-3.1"
    "$HOME/software/EDEN-3.1"
)

echo "🔍 Detecting existing paths..."

# Find existing workspace
DETECTED_WORKSPACE=""
for ws in "${COMMON_WORKSPACES[@]}"; do
    if [ -d "$ws" ]; then
        DETECTED_WORKSPACE="$ws"
        echo "✅ Found workspace: $ws"
        break
    fi
done

# Find existing EDEN path
DETECTED_EDEN=""
for eden in "${COMMON_EDEN_PATHS[@]}"; do
    if [ -d "$eden" ]; then
        DETECTED_EDEN="$eden"
        echo "✅ Found EDEN: $eden"
        break
    fi
done

echo

# Prompt for workspace path
if [ -n "$DETECTED_WORKSPACE" ]; then
    echo "📁 Base workspace directory:"
    echo "   Detected: $DETECTED_WORKSPACE"
    read -p "   Use this path? [Y/n]: " use_detected
    if [[ $use_detected =~ ^[Nn]$ ]]; then
        read -p "   Enter custom workspace path: " WORKSPACE_PATH
    else
        WORKSPACE_PATH="$DETECTED_WORKSPACE"
    fi
else
    echo "📁 Base workspace directory not auto-detected."
    echo "   This should contain subdirectories like MergeDetCat/ and RR2_downloads/"
    read -p "   Enter workspace path: " WORKSPACE_PATH
fi

# Prompt for EDEN path  
if [ -n "$DETECTED_EDEN" ]; then
    echo
    echo "🔬 EDEN environment path:"
    echo "   Detected: $DETECTED_EDEN"
    read -p "   Use this path? [Y/n]: " use_detected_eden
    if [[ $use_detected_eden =~ ^[Nn]$ ]]; then
        read -p "   Enter custom EDEN path: " EDEN_PATH
    else
        EDEN_PATH="$DETECTED_EDEN"
    fi
else
    echo
    echo "🔬 EDEN environment path not auto-detected."
    read -p "   Enter EDEN path (or press Enter for default): " EDEN_PATH
    if [ -z "$EDEN_PATH" ]; then
        EDEN_PATH="/cvmfs/euclid-dev.in2p3.fr/EDEN-3.1"
    fi
fi

# Create config_local.ini
echo
echo "📝 Creating config_local.ini..."

cat > config_local.ini << EOF
# Local Configuration for Cluster Visualization
# Generated by setup_config.sh on $(date)

[paths]
# Base workspace directory containing all Euclid data
base_workspace = $WORKSPACE_PATH

# CVMFS EDEN environment path
eden_path = $EDEN_PATH

# Main data directories
mergedetcat_dir = \${paths:base_workspace}/MergeDetCat/RR2_south
rr2_downloads_dir = \${paths:base_workspace}/RR2_downloads

[files]
# Algorithm-specific files (can be relative to mergedetcat_dir or absolute paths)
# PZWAV algorithm files
pzwav_detfiles_list = detfiles_input_pzwav_3.json
pzwav_output_dir = outvn_mergedetcat_rr2south_PZWAV_3

# AMICO algorithm files  
amico_detfiles_list = detfiles_input_amico_3.json
amico_output_dir = outvn_mergedetcat_rr2south_AMICO_3

# Common files (can be relative to rr2_downloads_dir or absolute paths)
catred_fileinfo_csv = catred_fileinfo.csv
catred_polygons_pkl = catred_polygons_by_tileid.pkl

# Optional: Override with full paths if your data is in non-standard locations
# Example:
# pzwav_detfiles_list = /custom/path/to/pzwav_detfiles.json
# catred_fileinfo_csv = /different/location/catred_info.csv
# catred_dir = /completely/different/catred/location
# effcov_mask_dir = /another/path/to/masks

[environment]
# Environment variables to check
required_env_vars = 
optional_env_vars = EUCLID_WORKSPACE,EDEN_PATH

[validation]
# Directories that must exist for the application to work
critical_dirs = base_workspace,mergedetcat_dir,rr2_downloads_dir

# Directories that are optional but recommended
optional_dirs = eden_path
EOF

echo "✅ Configuration file created: config_local.ini"
echo

# Test the configuration
echo "🧪 Testing configuration..."
python config.py

echo
echo "🎉 Setup complete!"
echo
echo "Next steps:"
echo "1. Run './launch.sh' to start the Dash application"
echo "2. If there are configuration issues, edit config_local.ini manually"
echo "3. For reference, see config_example.ini for more configuration options"
